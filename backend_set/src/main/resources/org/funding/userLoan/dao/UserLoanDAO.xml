<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.funding.userLoan.dao.UserLoanDAO">

    <!-- 저장 -->
    <insert id="insertUserLoan" parameterType="org.funding.userLoan.vo.UserLoanVO" useGeneratedKeys="true" keyProperty="userLoanId">
        INSERT INTO user_loan (fund_id, user_id, loan_amount, loan_access, full_payment)
        VALUES (#{fundId}, #{userId}, #{loanAmount}, #{loanAccess}, #{fullPayment})
    </insert>

    <!-- 단건 조회 -->
    <select id="findById" parameterType="long" resultType="org.funding.userLoan.vo.UserLoanVO">
        SELECT user_loan_id, fund_id, user_id, loan_amount, loan_access, full_payment
        FROM user_loan
        WHERE user_loan_id = #{userLoanId}
    </select>

    <!-- 전체 조회 -->
    <select id="findAll" resultType="org.funding.userLoan.vo.UserLoanVO">
        SELECT user_loan_id, fund_id, user_id, loan_amount, loan_access, full_payment
        FROM user_loan
    </select>

    <!-- 업데이트 -->
    <update id="updateUserLoan" parameterType="org.funding.userLoan.vo.UserLoanVO">
        UPDATE user_loan
        SET fund_id = #{fundId},
            user_id = #{userId},
            loan_amount = #{loanAmount},
            loan_access = #{loanAccess},
            full_payment = #{fullPayment}
        WHERE user_loan_id = #{userLoanId}
    </update>

    <!-- 삭제 -->
    <delete id="deleteUserLoan" parameterType="long">
        DELETE FROM user_loan WHERE user_loan_id = #{userLoanId}
    </delete>

    <!-- SuccessType 기준 조회 -->
    <select id="findByLoanAccess" parameterType="org.funding.userLoan.vo.enumType.SuccessType" resultType="org.funding.userLoan.vo.UserLoanVO">
        SELECT user_loan_id, fund_id, user_id, loan_amount, loan_access, full_payment
        FROM user_loan
        WHERE loan_access = #{loanAccess}
    </select>

    <!--    펀딩 id로 유저가 참여했는지 판별-->
    <select id="existsByUserIdAndFundId" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user_loan
        WHERE user_id = #{userId} AND fund_id = #{fundId}
    </select>

    <select id="findAllLoanDetailsByUserId" resultType="org.funding.userLoan.dto.UserLoanDetailDTO">
        SELECT
            ul.user_loan_id AS userLoanId,
            ul.loan_amount AS loanAmount,
            ul.full_payment AS fullPayment,
            ul.loan_access AS loanAccess,
            p.name AS loanName,
            l.loan_limit AS loanLimit,
            l.min_interest_rate AS minInterestRate,
            l.max_interest_rate AS maxInterestRate,
            l.repayment_start_date AS repaymentStartDate,
            l.repayment_end_date AS repaymentEndDate,
            p.product_id AS productId
        FROM
            user_loan ul
                JOIN
            fund f ON ul.fund_id = f.fund_id
                JOIN
            loan l ON f.product_id = l.product_id
                JOIN
            financial_product p ON l.product_id = p.product_id
        WHERE
            ul.user_id = #{userId}
        ORDER BY
            ul.user_loan_id DESC
    </select>


    <select id="findApplicationsByFundId" parameterType="map" resultType="org.funding.userLoan.dto.UserLoanApplicationDTO">
        SELECT
        ul.user_loan_id AS userLoanId,
        ul.user_id AS userId,
        m.username AS username,
        m.nickname AS nickname,
        ul.loan_amount AS loanAmount,
        ul.loan_access AS status,
        FROM
        user_loan ul
        JOIN
        member m ON ul.user_id = m.user_id
        WHERE
        ul.fund_id = #{fundId}
        <if test="status != null and status != ''">
            AND ul.loan_access = #{status}
        </if>
        ORDER BY
        ul.user_loan_id DESC
    </select>


</mapper>
