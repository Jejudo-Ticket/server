<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.funding.mapping.userChallenge.dao.UserChallengeDAO">

    <!-- 사용자 챌린지 참여 등록 -->
    <insert id="insertUserChallenge" parameterType="org.funding.mapping.userChallenge.vo.UserChallengeVO">
        INSERT INTO user_challenge (
            user_id, fund_id
        )
        VALUES (
                   #{userId}, #{fundId}
               )
    </insert>

    <!-- 인증 성공 시 성공 카운트 증가 -->
    <update id="updateUserChallengeSuccess">
        UPDATE user_challenge
        SET current_count = current_count + 1
        WHERE user_challenge_id = #{userChallengeId}
    </update>

    <!-- 인증 실패 시 실패 카운트 증가 -->
    <update id="updateUserChallengeFail">
        UPDATE user_challenge
        SET fail_count = fail_count + 1
        WHERE user_challenge_id = #{userChallengeId}
    </update>

    <!-- 챌린지 상태 변경 ('성공', '실패', '진행중') -->
    <update id="updateChallengeStatus">
        UPDATE user_challenge
        SET status = #{status}
        WHERE user_challenge_id = #{userChallengeId}
    </update>

    <!--    유저가 첼린지 동참여부 판단-->
    <select id="existsByIdAndUserId" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user_challenge
        WHERE user_challenge_id = #{userChallengeId}
        AND user_id = #{userId}
    </select>

<!--    id로 첼린지 조회-->
    <select id="findById" resultType="org.funding.mapping.userChallenge.vo.UserChallengeVO" parameterType="long">
        SELECT
            user_challenge_id,
            fund_id,
            user_id,
            current_count,
            fail_count
        FROM user_challenge
        WHERE user_challenge_id = #{userChallengeId}
    </select>

    <!-- ID로 유저 챌린지 삭제 -->
    <delete id="deleteUserChallenge" parameterType="long">
        DELETE FROM user_challenge
        WHERE user_challenge_id = #{userChallengeId}
    </delete>

    <select id="findAllChallengesByUserId" resultType="org.funding.mapping.userChallenge.dto.UserChallengeDetailDTO">
        SELECT
            uc.user_challenge_id AS userChallengeId,
            uc.current_count AS currentCount,
            uc.fail_count AS failCount,
            p.name AS challengeName,
            i.image_url AS challengeImageUrl,
            c.challenge_start_date AS challengeStartDate,
            c.challenge_end_date AS challengeEndDate,
            c.reward AS reward,
            c.verify_standard AS verifyStandard
        FROM
            user_challenge uc
                JOIN
            fund f ON uc.fund_id = f.fund_id
                JOIN
            challenge c ON f.product_id = c.product_id
                JOIN
            financial_product p ON c.product_id = p.product_id
                LEFT JOIN
            s3_image i ON p.product_id = i.post_id AND i.image_type = 'Funding'
        WHERE
            uc.user_id = #{userId}
        ORDER BY
            c.challenge_start_date DESC
    </select>


<!--    챌린지 상세보기-->
    <select id="findChallengeDetailById" resultType="org.funding.mapping.userChallenge.dto.UserChallengeDetailDTO">
        SELECT
            uc.user_challenge_id AS userChallengeId,
            uc.current_count AS currentCount,
            uc.fail_count AS failCount,
            p.name AS challengeName,
            i.image_url AS challengeImageUrl,
            c.challenge_start_date AS challengeStartDate,
            c.challenge_end_date AS challengeEndDate,
            c.reward AS reward,
            c.verify_standard AS verifyStandard
        FROM
            user_challenge uc
                JOIN
            fund f ON uc.fund_id = f.fund_id
                JOIN
            challenge c ON f.product_id = c.product_id
                JOIN
            financial_product p ON c.product_id = p.product_id
                LEFT JOIN
            s3_image i ON p.product_id = i.post_id AND i.image_type = 'Funding'
        WHERE
            uc.user_challenge_id = #{userChallengeId}
    </select>

<!--    펀딩 id로 유저가 참여했는지 판별-->
    <select id="existsByUserIdAndFundId" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user_challenge
        WHERE user_id = #{userId} AND fund_id = #{fundId}
    </select>

</mapper>
